server.port=8000

spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/xiaomi?useUnicode=true&characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = xiaomi

spring.datasource.druid.maxActive=400
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=10000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=30000
spring.datasource.druid.validation-query=select 1 from dual
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.filters=stat,log4j,wall
spring.datasource.druid.useGlobalDataSourceStat=true
spring.datasource.druid.connection-init-sqls=set names utf8mb4;
spring.datasource.druid.phyTimeoutMillis=1200000

feign.hystrix.enabled=true
feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
feign.client.config.test.connect-timeout=10
feign.client.config.test.read-timeout=10
# 隔离策略使用信号量
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
hystrix.command.TestClient#getUserCommand(Integer).execution.isolation.strategy=THREAD
# hystrix本身不设置超时,交给底层请求去设置超时
hystrix.command.default.execution.timeout.enabled=false
# 同一group的并发请求量
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=50
# fallback也会使用信号量隔离,可以设得尽可能大
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=100
# 窗口时间内100%的请求都失败才短路
hystrix.command.default.circuitBreaker.errorThresholdPercentage=100